import { DatePipe } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { NgxSpinnerService } from 'ngx-spinner';
import { Pagination } from 'src/app/models/Pagination/pagination';
import { AlertifyService } from 'src/app/services/Alertify/alertify.service';
import { ComplianceService } from 'src/app/services/ComplianceReport/compliance.service';
import { ExcelService } from 'src/app/services/Excel/excel.service';
import { PdfService } from 'src/app/services/PDF/pdf.service';

@Component({
  selector: 'app-compliancecertificate',
  templateUrl: './compliancecertificate.component.html',
  styleUrls: ['./compliancecertificate.component.css'],
  providers: [DatePipe]
})
export class CompliancecertificateComponent implements OnInit {
  public Pagination = new Pagination();
  public TableFilter = '';
  fromdate: any;
  todate: any;
  myDate = new Date();
  ListData: any = [];
  constructor(
    private spinner: NgxSpinnerService,
    private alertify: AlertifyService,
    private datePipe: DatePipe,
    private complinceService: ComplianceService,
    private excelService: ExcelService,
    private pdfService: PdfService
  ) { }

  ngOnInit() {
    this.spinner.hide();
    this.Pagination.CurrentPage = 1;
    this.Pagination.ItemsPerPage = 10;
    this.Pagination.TotalRecords = 0;
    this.fromdate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');
    this.todate = this.datePipe.transform(this.myDate, 'yyyy-MM-dd');
    this.BindCertificate();
  }


  GenerateCertificate() {
    var fromDate = this.datePipe.transform(this.fromdate, 'dd-MM-yyyy');
    var toDate = this.datePipe.transform(this.todate, 'dd-MM-yyyy');
    this.spinner.show();
    var data = { "date_from": fromDate, "date_to": toDate };

    this.complinceService.GenerateComplicanceCertificate(data).subscribe((data: any) => {
      if (data.response.status == "Success") {
        this.alertify.success("Cerificate denerated successfully");
        this.spinner.hide();
      }
      else {
        this.alertify.success("Cerificate not denerated successfully");
        this.spinner.hide();
      }
    })
  }

  BindCertificate() {
    this.spinner.show();
    this.complinceService.BindCertificate().subscribe((data: any) => {
      this.ListData = data.response.data;
      //this.Pagination.TotalRecords = data.response.data.length;
      this.spinner.hide();
    })
  }

  DownloadDocument(dname) {
    this.spinner.show();
    // this.complinceService.DownloadDocument(dname).subscribe((data: any) => {
    //   data = "http://10.21.20.14:8081/a25fab16-0a97-451d-bc29-4624e38d4672";
    //   var file = new Blob([data], { type: 'application/pdf' })
    //   var fileURL = URL.createObjectURL(file);

    //   // if you want to open PDF in new tab
    //   window.open(fileURL);
    //   var a = document.createElement('a');
    //   a.href = fileURL;
    //   a.download = 'sagar krios_25052021_1621926817731.pdf';
    //   document.body.appendChild(a);
    //   a.click();

    //   this.spinner.hide();
    // })

    this.complinceService.DownloadDocument(dname).subscribe(res => {
      const fileURL = URL.createObjectURL(res);
      const link = document.createElement('a');
      link.setAttribute('target', '_blank');
      link.setAttribute('href', fileURL);
      link.setAttribute('download', dname);
      document.body.appendChild(link);
      link.click();
      link.remove();
      this.spinner.hide();
    });
  }

  exportExcel() {
    this.spinner.show();
    var countIndex = 1;
    const sendDataToExport = [];
    this.ListData.forEach(element => {
      const obj = {
        'Sr. No.': countIndex,
        'Generated By': element.fname,
        'Generated Date': element.created_at,
        'From Date': element.from,
        'To Date': element.to,
        'Cirtificate': element.orig_file_name
      };
      sendDataToExport.push(obj);
      countIndex += 1;
    });
    this.excelService.exportExcel(sendDataToExport, 'Compliance_Certificate_Export_Excel');
    this.spinner.hide();
  }

  exportPDF() {
    this.spinner.show();
    var countIndex = 1;

    var col = [
      'Sr. No.',
      'Generated By',
      'Generated Date',
      'From Date',
      'To Date',
      'Cirtificate'
    ];

    var rows: any = [];
    this.ListData.forEach(element => {
      var temp = [
        countIndex,
        element.fname,
        element.created_at,
        element.from,
        element.to,
        element.orig_file_name
      ];

      rows.push(temp);
      countIndex += 1;
    });

    this.pdfService.exportPDF(col, rows, 'Compliance_Certificate_Export_PDF');
    this.spinner.hide();
  }
}
